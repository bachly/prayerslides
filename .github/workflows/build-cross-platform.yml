name: Electron Build Cross-Platform

on:
  workflow_dispatch:  # Manual trigger
  push:
    tags:
      - 'v*'  # Trigger on version tags

jobs:
  electron-build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Windows
      run: |
        npm run build-app
        npm run create-initial-zip
        npm run package-win

    - name: Upload Windows build
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: packaged/Prayer Slides-win32-x64/
        retention-days: 1

  electron-build-mac:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Mac
      run: |
        npm run build-app
        npm run create-initial-zip
        npm run package-mac
      env:
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: Create DMG
      run: |
        mkdir -p dist
        hdiutil create -volname "Prayer Slides" -srcfolder "packaged/Prayer Slides-darwin-x64/" -ov -format UDZO "dist/Prayer-Slides-Mac.dmg"

    - name: Upload Mac build
      uses: actions/upload-artifact@v4
      with:
        name: mac-build
        path: |
          packaged/Prayer Slides-darwin-x64/
          dist/Prayer-Slides-Mac.dmg
        retention-days: 1

  electron-combine-builds:
    needs: [electron-build-windows, electron-build-mac]
    runs-on: ubuntu-latest

    steps:
    - name: Download Windows build
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: windows/

    - name: Download Mac build
      uses: actions/download-artifact@v4
      with:
        name: mac-build
        path: mac-temp/

    - name: Organize builds
      run: |
        mkdir -p Prayer-Slides-Cross-Platform/windows
        mkdir -p Prayer-Slides-Cross-Platform/mac

        # Copy Windows build
        cp -r windows/* Prayer-Slides-Cross-Platform/windows/

        # Copy Mac app bundle
        cp -r mac-temp/packaged/* Prayer-Slides-Cross-Platform/mac/

        # Copy DMG file to root
        cp mac-temp/dist/*.dmg Prayer-Slides-Cross-Platform/ 2>/dev/null || echo "No DMG file found"

        # Create README
        cat > Prayer-Slides-Cross-Platform/README.md << 'EOF'
        # Prayer Slides - Cross-Platform Distribution

        ## Windows Installation
        1. Navigate to the 'windows' folder
        2. Run 'Prayer Slides.exe'
        3. No installation required!

        ## Mac Installation
        ### Option 1: DMG Installer (Recommended)
        1. Double-click 'Prayer-Slides-Mac.dmg'
        2. Drag Prayer Slides.app to Applications folder

        ### Option 2: App Bundle
        1. Navigate to the 'mac' folder
        2. Drag 'Prayer Slides.app' to your Applications folder
        3. Right-click and select "Open" on first launch

        ## Features
        - Import/Export prayer slide data
        - Version management with automatic backups
        - Offline functionality
        - Cross-platform compatibility

        Built with Electron and Next.js
        EOF

    - name: Create cross-platform package
      run: |
        zip -r Prayer-Slides-Cross-Platform.zip Prayer-Slides-Cross-Platform/

    - name: Upload cross-platform package
      uses: actions/upload-artifact@v4
      with:
        name: prayer-slides-cross-platform
        path: Prayer-Slides-Cross-Platform.zip
        retention-days: 30

    - name: Show final results
      run: |
        echo "âœ… Cross-platform build completed!"
        echo "ðŸ“¦ Package contents:"
        ls -la Prayer-Slides-Cross-Platform/
        echo "ðŸ“Š Package size:"
        ls -lh Prayer-Slides-Cross-Platform.zip
